CMAKE_MINIMUM_REQUIRED (VERSION 3.0)
project(xyz2zxy CXX)
#set(CMAKE_VERBOSE_MAKEFILE 1)
# set(CMAKE_BUILD_TYPE Debug)
SET(CMAKE_BUILD_TYPE Release)
# set(CMAKE_BUILD_TYPE RelWithDebInfo)
# set(CMAKE_BUILD_TYPE MinSizeRel)
SET(CMAKE_CXX_STANDARD 20) #11, 17 
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS OFF)
find_package(Threads REQUIRED)
find_package(OpenCV)
if(MSVC) #Visual Studio
        set(CMAKE_CXX_FLAGS "/W4")
        set(CMAKE_CXX_FLAGS_RELEASE "/MT")
        set(CMAKE_CXX_FLAGS_DEBUG "/MTd")
        set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "/MT") #todo
        set(CMAKE_CXX_FLAGS_MINSIZEREL     "/MT") #todo
elseif(APPLE OR CMAKE_COMPILER_IS_GNUCXX) #UNIX
#	set(CMAKE_CXX_COMPILER "/usr/local/bin/g++" CACHE string "g++ compiler" FORCE)
        set(CMAKE_MACOSX_RPATH 1)
        set(CMAKE_CXX_FLAGS "-Wall")
        set(CMAKE_CXX_FLAGS_DEBUG          "-g3 -O0 -pg")
        set(CMAKE_CXX_FLAGS_RELEASE        "-O3 -DNDEBUG -march=native ")
        set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-g3 -Og -pg")
        set(CMAKE_CXX_FLAGS_MINSIZEREL     "-Os -DNDEBUG -march=native")
        include_directories(/usr/local/include)
endif()
INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIRS}  .)
ADD_EXECUTABLE(xyz2zxy xyz2zxy.cpp)
TARGET_LINK_LIBRARIES(xyz2zxy ${OpenCV_LIBS} pthread)
ADD_EXECUTABLE(xyz2zxy_divide xyz2zxy_divide.cpp)
TARGET_LINK_LIBRARIES(xyz2zxy_divide ${OpenCV_LIBS} pthread )
ADD_EXECUTABLE(xyz2zxy_collect xyz2zxy_collect.cpp)
TARGET_LINK_LIBRARIES(xyz2zxy_collect ${OpenCV_LIBS} pthread)
add_executable(xyz2zxy_single xyz2zxy_single.cpp)
TARGET_LINK_LIBRARIES(xyz2zxy_single ${OpenCV_LIBS} pthread) 
#add_executable(xyz2zxy_delete xyz2zxy_delete.cpp)
#TARGET_LINK_LIBRARIES(xyz2zxy_delete ${OpenCV_LIBS} pthread) 


